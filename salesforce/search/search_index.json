{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"cli/sf-cli/","title":"retrieve/deploy","text":"<pre><code># retrieve\nsf project retrieve start --manifest package.xml -o $org\n\n# deply\nsf project deploy start --manifest package.xml -o $org --dry-run --wait=30 --test-level=NoTestRun --ignore-warnings\nsf project deploy start -x package.xml -o $org --dry-run -w 30 -t NoTestRun -g\n</code></pre>","tags":["salesforce","sfdc"]},{"location":"cli/sf-data-query/","title":"sf-data-query","text":"","tags":["salesforce","sfdc"]},{"location":"cli/sf-data-query/#data-query","title":"data query","text":"<pre><code>for RECORD in $(sf data query -t -q \"SELECT Id, Name FROM User ORDER BY CreatedDate DESC LIMIT 10\" --json -o dev | jq -c '.result.records[]'); do\n    echo \"$RECORD\" | jq .\n    ID=$(echo \"$RECORD\" | jq -r '.Id')\ndone\n</code></pre> <pre><code>sf data query -t -q \"SELECT Id, Name FROM User ORDER BY CreatedDate DESC LIMIT 10\" --json -o dev | jq -c '.result.records[]' | while read -r RECORD; do\n    echo \"$RECORD\" | jq .\n    ID=$(echo \"$RECORD\" | jq -r '.Id')\ndone\n</code></pre>","tags":["salesforce","sfdc"]},{"location":"cli-3rd/dataloader1/","title":"dataloader1","text":"<p>dataloader1 init -u user -p password -e https://login.salesforce.com</p> <p>jsf1 process-conf -u dev</p> <p>java -cp ~/.dataloader1/63.0.0/dataloader-63.0.0.jar com.salesforce.dataloader.process.DataLoaderRunner salesforce.config.dir=<code>pwd</code>/config run.mode=batch process.name=AccountExport</p>","tags":["salesforce","sfdc","apex","lwc","developer"]},{"location":"cli-3rd/sf-deploy/","title":"sf-deploy","text":"","tags":["salesforce","sfdc"]},{"location":"cli-3rd/sf-deploy/#deploy","title":"deploy","text":"<pre><code>targetOrg: org\nwait: 120\ndryRun: false\npackage:\n  - name: dev\n    changeset: dev\n    commit: \n    commitHeader: Head\n    gitStaged: true\n    checkExt: true\n\n  - name: sample\n    changeset: sample\n    commit: \n    commitHeader: hash^\n    gitStaged: true\n    checkExt: true\n    tests:\n      - SampleTest\n\nmanifest:\n  - name: dev\n    metadata:\n      ApexClass:\n        - SampleTest\n      CustomField:\n        - Sample__c.Title__c\n      Certificate:\n        - sample\n    tests:\n      - Dev\n</code></pre> <pre><code>sf project convert source --source-dir \"force-app/main/default/classes/Sample.cls\" --output-dir dist/mdapioutput --package-name \"test\"\n</code></pre>","tags":["salesforce","sfdc"]},{"location":"cli-3rd/sf-xlogin/","title":"sf-xlogin","text":"","tags":["salesforce","sfdc","apex","lwc","developer"]},{"location":"cli-3rd/sf-xlogin/#sf-xlogin","title":"sf-xlogin","text":"<p>https://github.com/exiahuang/sfdx-password-login</p> <pre><code>echo y | sfdx plugins:install sfdx-password-login\n\nsfdx xlogin -u username -p password -a alias -r instanceurl -i clientid -s clientsecret\n\nsfdx xlogin -u username -p password -a alias -r https://login.salesforce.com/\n\nsfdx xlogin -u username -p password -a alias -r https://test.salesforce.com/\n\nsfdx org open -u alias -r\n</code></pre>","tags":["salesforce","sfdc","apex","lwc","developer"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/","title":"Access-Control-in-Experience-Cloud","text":"","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#access-control-in-experience-cloud","title":"Access Control in Experience Cloud","text":"<p>Access Control in Experience Cloud</p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#overview-of-access-control-specific-to-experience-cloud","title":"Overview of Access Control Specific to Experience Cloud","text":"<p>As a prerequisite, Experience Cloud is designed to accommodate large numbers of users, and it has a special access control system capable of handling large-scale users. Additionally, access control tailored to external users' use cases, which are different from internal users, can be set up as standard functionality.</p> <p>As a side note, a senior colleague once attempted to implement access control functionality for Experience Cloud through custom code, not knowing about the built-in feature. If they had known about the access control available in Experience Cloud, they could have implemented record-level access control simply through configuration without needing development.</p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#common-salesforce-features","title":"Common Salesforce Features","text":"<p>Salesforce provides several common features for access control, including: - Sharing settings - Sharing rules - Role hierarchy - Manual sharing - Apex sharing  </p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#unique-features-of-experience-cloud","title":"Unique Features of Experience Cloud","text":"<p>Experience Cloud has five unique access control features, which I will summarize here:</p> <ol> <li>Sharing Sets </li> <li>External Account Hierarchies </li> <li>Account Relationships and Account Relationship Data Sharing Rules </li> <li>Channel Programs </li> <li>Super Users</li> </ol> <p>Let\u2019s take a detailed look at each of them. (Note: Some of these features are dependent on the license type, and I will mention that as well.)</p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#sharing-sets","title":"Sharing Sets","text":"<p>A Sharing Set is a feature that provides record-level access control at the account level. To put it simply, it means \"you can view all records associated with your account.\" Users linked to an account or contact can share records from accounts, contacts, and other objects. Instead of starting from the record owner, the access is based on the contact linked to the external user.</p> <p>Sharing Sets are available for all Experience Cloud licenses.</p> <p>So why is a Sharing Set needed? It is a different function from the regular Salesforce sharing model mentioned earlier. It does not offer the same flexible access control as the standard sharing model. In Salesforce, the organization\u2019s sharing settings define the baseline level of access for each object. You can set default access control for users\u2019 records. For internal users, you can extend the access restrictions set by the organization's sharing settings using Sharing Rules with roles and public groups. However, some external user licenses, like Customer Community Licenses, do not allow role assignments and cannot be included in sharing rules. In these cases, you can control access for external users using Sharing Sets. It is not practical to set roles for every customer. Moreover, the Customer Community License does not support role models.</p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#external-account-hierarchies","title":"External Account Hierarchies","text":"<p>The second feature is External Account Hierarchies. This feature is used when you want to establish a hierarchy between accounts. External Account Hierarchies are not available for Customer Community Licenses but can be used with Customer Community Plus Licenses and Partner Community Licenses.  </p> <p>External users can be linked to an account hierarchy, and records can be shared with the upper levels, just like role hierarchies. A typical use case is where a parent agency wants to manage the sales data of its subsidiary agencies. The parent agency can view the sales of the sub-agencies, but the sub-agencies should not see each other\u2019s sales. This management can be done using account hierarchies.</p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#limitations","title":"Limitations:","text":"<ul> <li>Up to 5 levels of hierarchy are allowed.  </li> <li>Individual accounts are not supported.  </li> <li>At least one role is required for each account. Linked roles cannot be used.  </li> <li>All accounts in a hierarchy must be under the same license type.  </li> <li>An account can only belong to one hierarchy.  </li> <li>The maximum number of records in a hierarchy is 100,000.</li> </ul>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#account-relationships-and-account-relationship-data-sharing-rules","title":"Account Relationships and Account Relationship Data Sharing Rules","text":"<p>The third feature is Account Relationships and Account Relationship Data Sharing Rules. In simple terms, this allows \"granting access rights from one account to another.\" Using Account Relationship Data Sharing Rules, you can define the conditions under which records are shared with external accounts. These rules define the relationship type, shared information, and record access rights granted to the associated accounts.</p> <p>Once the data sharing rules are defined, you create Account Relationships to share records with external accounts. An Account Relationship consists of the account sharing information, the accounts that have access to those records, and the type of relationship between them.</p> <p>This means you define \u201cwhich records to share\u201d using data sharing rules, and you define \u201cwho receives access\u201d using account relationships.</p> <p>Account Relationships are not available for Customer Community Licenses but are available with Customer Community Plus Licenses and Partner Community Licenses.</p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#channel-programs","title":"Channel Programs","text":"<p>Channel Programs are used to group accounts and grant permissions based on those groups. Channel Programs are available with the Partner Community License. Three standard objects are provided for managing Channel Programs:</p> <ul> <li>Channel Program: Groups partners by type or location. You can organize sales teams with multiple channels. For example, you can create programs for different types of partners like resellers.</li> <li>Program Level: Creates levels within each program to rank partners based on performance (e.g., Bronze, Silver, Gold).</li> <li>Channel Program Members: A junction object linking accounts with Channel Programs, used to organize and manage partners.</li> </ul>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#super-users","title":"Super Users","text":"<p>The fifth feature is Super Users. As the name suggests, these are users within an account who have special privileges (external privileged users). The behavior of Super Users differs between Customer Community Plus Licenses and Partner Community Licenses, so I will explain each separately.</p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#customer-community-plus-license","title":"Customer Community Plus License","text":"<p>For this license, the Super User is called the Portal Super User. To set it up, you add the Portal Super User permission in a permission set and assign it to users. The accessible objects are very limited, typically cases and contacts.</p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#partner-community-license","title":"Partner Community License","text":"<p>For this license, the Super User is called the Partner Super User. The setup is done via the Digital Experience settings, where you enable Partner Super User Access. The accessible objects include cases, leads, opportunities, and custom objects.</p> <p>Super Users can access records linked to their accounts, regardless of their role hierarchy.</p>","tags":["salesforce","sfdc"]},{"location":"experience-cloud/001-Access-Control-in-Experience-Cloud/#conclusion","title":"Conclusion","text":"<p>Experience Cloud\u2019s access control mechanisms are unique, and I found it interesting to explore them further. Here is a summary:</p> <ul> <li>Sharing Sets: Share all records within the associated account.</li> <li>External Account Hierarchies: Create a hierarchy between accounts and share with higher levels.</li> <li>Account Relationships and Data Sharing Rules: Share records from one account to another.</li> <li>Channel Programs: Group accounts and share records based on the group.</li> <li>Super Users: Grant special access within an account.</li> </ul> <p>Thank you for reading through this! I look forward to trying out some of these features in a Sandbox environment when I get the chance.</p>","tags":["salesforce","sfdc"]},{"location":"issue/TotalRequests-Limit-exceeded/","title":"TotalRequests-Limit-exceeded","text":"","tags":["salesforce","sfdc","apex","lwc","developer"]},{"location":"issue/TotalRequests-Limit-exceeded/#totalrequests-limit-exceeded","title":"TotalRequests Limit exceeded","text":"<pre><code>{\n    \"soapenv:Envelope\": {\n      \"$\": {\n        \"xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n        \"xmlns:sf\": \"urn:fault.partner.soap.sforce.com\",\n        \"xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\"\n      },\n      \"soapenv:Body\": [\n        {\n          \"soapenv:Fault\": [\n            {\n              \"faultcode\": [\n                \"sf:REQUEST_LIMIT_EXCEEDED\"\n              ],\n              \"faultstring\": [\n                \"REQUEST_LIMIT_EXCEEDED: TotalRequests Limit exceeded.\"\n              ],\n              \"detail\": [\n                {\n                  \"sf:UnexpectedErrorFault\": [\n                    {\n                      \"$\": {\n                        \"xsi:type\": \"sf:UnexpectedErrorFault\"\n                      },\n                      \"sf:exceptionCode\": [\n                        \"REQUEST_LIMIT_EXCEEDED\"\n                      ],\n                      \"sf:exceptionMessage\": [\n                        \"TotalRequests Limit exceeded.\"\n                      ]\n                    }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n}\n</code></pre> <p>Solution As a Salesforce Administrator: Navigate to Setup &gt; Company Profile Select Company Information &gt; API Requests, Last 24 hours.</p> <p>If you have exceeded your organization's limit, Docusign eSignature for Salesforce will continue to experience errors until the count rolls over. If this limit was reached by one-off bulk actions, encountering this situation may not be a concern. If your Salesforce organization needs an increased API limit (either temporarily or on a permanent basis), you will need to contact Salesforce Support to discuss this.</p> <p>API \u8981\u6c42\u6570 (\u3053\u306e 24 \u6642\u9593\u4ee5\u5185)    20,386 (15,000 \u6700\u5927)</p>","tags":["salesforce","sfdc","apex","lwc","developer"]},{"location":"issue/TotalRequests-Limit-exceeded/#login-success","title":"login success","text":"<pre><code>{\n  \"soapenv:Envelope\": {\n    \"$\": {\n      \"xmlns:soapenv\": \"http://schemas.xmlsoap.org/soap/envelope/\",\n      \"xmlns\": \"urn:partner.soap.sforce.com\",\n      \"xmlns:xsi\": \"http://www.w3.org/2001/XMLSchema-instance\"\n    },\n    \"soapenv:Body\": [\n      {\n        \"loginResponse\": [\n          {\n            \"result\": [\n              {\n                \"metadataServerUrl\": [\n                  \"https://xxxx.my.salesforce.com/services/Soap/m/21.0/00Dxxx\"\n                ],\n                \"passwordExpired\": [\n                  \"false\"\n                ],\n                \"sandbox\": [\n                  \"false\"\n                ],\n                \"serverUrl\": [\n                  \"https://xxxx.my.salesforce.com/services/Soap/u/21.0/00Dxxx\"\n                ],\n                \"sessionId\": [\n                  \"00Dxxx\"\n                ],\n                \"userId\": [\n                  \"005xxxx\"\n                ],\n                \"userInfo\": [\n                  {\n                    \"accessibilityMode\": [\n                      \"false\"\n                    ],\n                    \"currencySymbol\": [\n                      \"\uffe5\"\n                    ],\n                    \"orgAttachmentFileSizeLimit\": [\n                      \"26214400\"\n                    ],\n                    \"orgDefaultCurrencyIsoCode\": [\n                      \"JPY\"\n                    ],\n                    \"orgDisallowHtmlAttachments\": [\n                      \"false\"\n                    ],\n                    \"orgHasPersonAccounts\": [\n                      \"false\"\n                    ],\n                    \"organizationId\": [\n                      \"00Dxxxx\"\n                    ],\n                    \"organizationMultiCurrency\": [\n                      \"false\"\n                    ],\n                    \"organizationName\": [\n                      \"FreeLancer\"\n                    ],\n                    \"profileId\": [\n                      \"00exxxx\"\n                    ],\n                    \"roleId\": [\n                      \"00Exxxx\"\n                    ],\n                    \"sessionSecondsValid\": [\n                      \"7200\"\n                    ],\n                    \"userDefaultCurrencyIsoCode\": [\n                      {\n                        \"$\": {\n                          \"xsi:nil\": \"true\"\n                        }\n                      }\n                    ],\n                    \"userEmail\": [\n                      \"exia@test.com\"\n                    ],\n                    \"userFullName\": [\n                      \"xxxx exia\"\n                    ],\n                    \"userId\": [\n                      \"005xxx\"\n                    ],\n                    \"userLanguage\": [\n                      \"ja\"\n                    ],\n                    \"userLocale\": [\n                      \"ja_JP\"\n                    ],\n                    \"userName\": [\n                      \"exia\"\n                    ],\n                    \"userTimeZone\": [\n                      \"Asia/Tokyo\"\n                    ],\n                    \"userType\": [\n                      \"Standard\"\n                    ],\n                    \"userUiSkin\": [\n                      \"Theme3\"\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}\n</code></pre>","tags":["salesforce","sfdc","apex","lwc","developer"]},{"location":"issue/dataloader-sfdc-endpoint/","title":"dataloader-sfdc-endpoint","text":"<p>When handling data in sandbox environment using the Data Loader command-line interface, just setting a sandbox URL to \"sfdc.endpoint\" parameter was required so far, precisely until v62.0.1. Now I understand the following parameters are newly required, but is it correct?</p> <pre><code>sfdc.oauth.environment=\"Sandbox\"\nsfdc.endpoint.Sandbox**=\"\"\n** Note: \"sfdc.endpoint.sandbox\" in v62.0.2\n</code></pre>","tags":["salesforce","sfdc","apex","lwc","developer"]},{"location":"issue/invalid-ids-in-experiencebundle/","title":"invalid-ids-in-experiencebundle","text":"","tags":["salesforce","sfdc"]},{"location":"issue/invalid-ids-in-experiencebundle/#invalid-ids-in-experiencebundle","title":"invalid-ids-in-experiencebundle","text":"<p>https://salesforce.stackexchange.com/questions/334357/invalid-ids-in-experiencebundle</p> <p>https://developer.salesforce.com/blogs/2020/02/experiencebundle-salesforce-dx-a-developers-dream-for-coding-lighting-communities</p> <pre><code>=== Deploy Errors\nPROJECT PATH                                                              ERRORS\nThe reportId property of component xxxxx references an object with the ID value xxxxx. Occasionally, when deployed to a destination org, ID values can become invalid\u2014for example, if the referenced ID doesn\u2019t exist in the destination org. If you encounter component issues in your destination org, verify that the ID values are correct. (0:0)  \n</code></pre>","tags":["salesforce","sfdc"]}]}